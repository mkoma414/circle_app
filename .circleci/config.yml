config.yml
# アンカーをまとめている場所
references:
  commands:
    install_docker: &install_docker
      name: install docker 17.03.1-ce
      command: |
        export VER=17.03.1-ce
        curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
        tar -xz -C /tmp -f /tmp/docker-$VER.tgz
        sudo mv /tmp/docker/* /usr/bin
    install_pip: &install_pip
      name: install pip and modules
      command: |
        wget https://bootstrap.pypa.io/get-pip.py
        sudo python get-pip.py
        sudo pip install awscli
        sudo pip install awsebcli
        sudo pip install https://pypi.python.org/packages/2.7/b/blessed/blessed-1.9.5-py2.py3-none-any.whl
    install_php: &install_php
      name: install php extensions
      command: |
        sudo apt-get update && sudo apt-get -y install zlib1g-dev unzip
        yes '' | sudo pecl install -o -f redis && echo "extension=redis.so" > /usr/local/etc/php/conf.d/redis.ini
        sudo docker-php-ext-install pdo_mysql zip
        sudo docker-php-ext-enable redis

# CircleCIの設定
version: 2
jobs:
  test:
    environment:
      - DB_HOST: '127.0.0.1'
      - DB_DATABASE: 'test-db'
      - DB_USERNAME: 'root'
      - DB_PASSWORD: ''
      - REDIS_HOST: '127.0.0.1'
      - AWS_CUSTOM_ENDPOINT_S3: http://127.0.0.1:1234
    docker:
      - image: circleci/php:7.1
      - image: circleci/mysql:5.7
        environment:
          MYSQL_DATABASE: 'test-db'
      - image: circleci/fakes3:0.2.4
      - image: redis
    steps:
      - checkout
      - restore_cache:
          key: {{ .Branch }}
      - run: *install_php
      - run:
          name: run composer install
          command: |
            composer config -g repos.packagist composer https://packagist.jp
            composer global require hirak/prestissimo --no-interaction
            composer install --no-interaction
      - run:
          name: test
          command: |
            vendor/bin/phpunit
      - save_cache:
          key: {{ .Branch }}
          paths:
            - vendor
  deploy_dev:
    docker:
      - image: circleci/php:7.1
    steps:
      - checkout
      - setup_remote_docker
      - run: *install_docker
      - run: *install_pip
      - run: *install_php
      - restore_cache:
          key: {{ .Branch }}
      - deploy:
          name: deploy in development
          command: |
            eb use development
            eb deploy
      - save_cache:
          key: {{ .Branch }}
          paths:
            - vendor
  deploy_stg:
    docker:
      - image: circleci/php:7.1
    steps:
      - checkout
      - setup_remote_docker
      - run: *install_docker
      - run: *install_pip
      - run: *install_php
      - restore_cache:
          key: {{ .Branch }}
      - deploy:
          name: deploy in staging
          command: |
            eb use staging
            eb deploy
      - save_cache:
          key: {{ .Branch }}
          paths:
            - vendor
workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+){2}$/
      - deploy_dev:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy_stg:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+){2}$/
